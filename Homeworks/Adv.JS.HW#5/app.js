//===============
"use strict"; //+
//===============

// Теоретический вопрос
// Обьясните своими словами, как вы понимаете асинхронность в Javascript.

//Ответ:
/*Оба термина "синхронность" и "асинхронность" характеризуют порядок исполнения кода. Код JS выполняяется всегда синхронно, т.е., является однопоточным и блокирующим, дальнейшее исполнение кода блокирутся пока не выполнится текущее задание. При работе с процессами, требующими неопределенного времени для своей реализации (ожидание ответа на запрос и т.д.) это приводит к приостановке выполнения всего кода, что при работе с вебрессурсами является недопустимым. Есть две основные проблемы, которые позволяет решить асинхронный подход в программировании: если операция требует неопределенного времени для своего завершения, то не блокировать выполнение других операций не требующих результата данной; дождаться выполнения отложенной операции для реализации зависящих от ее результатов процессовю Асинхронность - это по факту реализация решений этих проблем в рамках синхронного потока. Используя promise и async/await мы можем заблокировать дальнейшее выполнение кода, пока не будет получен необходимый результат, либо отложить выполнение операций до получения результата. */

//----------------------------------------------------------------------
//Pressets:
let url_getIp = "https://api.ipify.org/?format=json";
let url_getLocation = "http://ip-api.com/json/";
let fields = ["continent", "country", "regionName", "city", "district"];
//----------------------------------------------------------------------

//======================================================================
//Process:
document.addEventListener("DOMContentLoaded", (event) => {
  const btn = document.querySelector(".btn");
  const alert_window = document.querySelector(".alert-window");

  btn.onclick = async () => {
    let response = await fetch(url_getIp);
    let res_json = await response.json();
    let ip = res_json.ip;
    let location = await fetch(
      url_getLocation + ip + "?fields=" + fields.join()
    );
    let location_json = await location.json();
    Object.keys(location_json).forEach((field) =>
      alert_window.insertAdjacentText(
        "beforeend",
        `${field}: ${location_json[field] || "none"}; `
      )
    );
  };
});
